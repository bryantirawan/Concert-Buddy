volumes:
    postgres-data:
        external: true
services:
    react:
      image: node:lts-bullseye
      command: /bin/bash run.sh
      working_dir: /app
      volumes:
        - ./ghi/app:/app
      ports:
        - "3000:3000"
      environment:
        HOST_OS: ${OS}
        NODE_ENV: development
        HOST: "0.0.0.0"
    database:
      image: postgres:14.2-bullseye
      volumes:
        - postgres-data:/var/lib/postgresql/data
        - ./db:/docker-entrypoint-initdb.d
      environment:
          - POSTGRES_MULTIPLE_DATABASES=concerts-api,buddy-api,ticket-api
          - POSTGRES_PASSWORD=test-databases
      ports:
          - 15432:5432
    concerts-api:
      build:
        context: ./concerts-api
        dockerfile: ./Dockerfile.dev
      ports:
        - "8100:8000"
      volumes:
        - ./concerts-api:/app
      depends_on:
        - database
      environment:
        DATABASE_URL: postgres://concerts-api:password@database:5432/concerts-api
        WAIT_HOSTS: database:5432
        WAIT_TIMEOUT: 240
    buddy-api:
      build:
        context: ./buddy-api
        dockerfile: ./Dockerfile.dev
      ports:
        - "8080:8000"
      volumes:
        - ./buddy-api:/app
      depends_on:
        - database
      environment:
        DATABASE_URL: postgres://buddy-api:password@database:5432/buddy-api
        WAIT_HOSTS: database:5432
        WAIT_TIMEOUT: 240
    ticket-api:
      build:
        context: ./ticket-api/
        dockerfile: ./Dockerfile.dev
      ports:
        - "8090:8000"
      volumes:
        - ./ticket-api:/app
      depends_on:
        - database
      environment:
        DATABASE_URL: postgres://ticket-api:password@database:5432/ticket-api
        WAIT_HOSTS: database:5432
        WAIT_TIMEOUT: 240
    # tickets-poller:
    #   build:
    #     context: ./tickets-api/poll
    #     dockerfile: ./Dockerfile.dev
    #   volumes:
    #     - ./tickets/poll:/app
    #     - ./tickets/api/tickets_project:/app/tickets_project
    #     - ./tickets/api/tickets_rest:/app/tickets_rest
    #   depends_on:
    #     - database
    #     - tickets-api
    #   environment:
    #     DATABASE_URL: postgres://tickets:password@database:5432/tickets
    #     WAIT_HOSTS: database:5432,tickets-api:8000
    #     WAIT_TIMEOUT: 240
    # buddy-poller:
    #   build:
    #     context: ./buddy/poll
    #     dockerfile: ./Dockerfile.dev
    #   volumes:
    #     - ./buddy/poll:/app
    #     - ./buddy/api/buddy_project:/app/buddy_project
    #     - ./buddy/api/buddy_rest:/app/buddy_rest
    #   depends_on:
    #     - database
    #     - buddy-api
    #   environment:
    #     DATABASE_URL: postgres://buddy:password@database:5432/buddy
    #     WAIT_HOSTS: database:5432,buddy-api:8000
    #     WAIT_TIMEOUT: 240